28 Mar 2022
- Intellij test automation --> finished chapter 6, advanced until chapter 7.3 -Run from Editor and COnfigurations
OCA pdf: finishing chapter 1

29 Mar 2022
-Intellij test automation tutorial --> finished tutorial
OCA pdf: recap for chapter 1 - classes, methods, variables

31 Mar 2022
OCA PDF:
chapter 1:
-java primitive types such as: boolean,byte,short,int,log,float,double,char
-converting to binary
-reference types: this refers to an object (an instance of a class) , unlike primitive values that hold their value in the memory where the variable is allocated
-declaring and initializing variables: string zooName; int numberAnimals;
zooName= ""The Best Zoo;
numberAnimals = 100;
-declaring multiple variables
String s1,s2;
String s3="yes";
String s4= "no";
int i1,i2,i3=0;
boolean b1,b2;
double d1,d2;
04 Apr 2022
Dif between obj refrences and primitives:
-boolean -> true or false;
-byte -> 8-bit integral value;
-short -> 16-bit integral value;
-int -> 32-bit integral value;
-long -> 64-bit integral value;
-float -> 32-bit floating-point value -- 123.45f;
-double -> 64-bit floating point value -- 123.456;
char ->16 bit unicode value ;
float and double are used for floating-point(decimal values)
a float requires the letter f following the number so Java can identify it as a float;
byte,short,int and long are used for numbers without decimal points

-local variables: a local variable is a variable defined within a method , they must be initialized before use:
public int notValid() {
int y=10;
int x;
x =3;
int reply= x+y;
return reply;
}

public void findAnswer(boolean check){
int answer;
int onlyOneBranch;
if (check) {
onlyOneBranch = 1;
answer = 1;
}
else {
answer = 2;
}
System.out.println(answer);

}


05 Apr 2022
-default initialization values for type
boolean - false
byte,short,int,long - 0 ( in the type's bit length)
float,double - 0.0 ( in the type's bit length)
char - '\u0000' (NUL)
all object references (everything else) - null

public void eat (int pecesOfCheese) {
int bitesOfCheese =1 ;
}

- Ordering Elements in a Class
package declaration - package abc;
import statements - import java.util.*;
class declaration - public class C;
field declarations - int value;
method declarations - void method ()

example:
package structure; // package must be first non-comment;
import java.util.*; //import must come after package;
public class Meerkat { //then comes the class
double weight; //fields and methods can go in either order;
public double getWeight () {
return weight;}
double height; //another field -they don't need to be together
}

Summary:
java classes consist of members called fields and methods
an object is an instance of a java class
commenting styles: // -single line comment; /* */ - multiline comment and /** */ javadoc comment
java begins program execution with a main() method
most common: public static void main (String[] args)
java code is organized into folders called packages
to reference classes in other packages we use an import statement
a wildcard ending an import statement means you want to import all classes in that package.It does not include
packages that are inside that one.
java.lang - special package that doesn't need to be imported
constructors create java objects
constructor = method matching the class name and omitting the return type
primitive types are the basic building blocks of java types, assembled into reference types
scope refers to portion of code where a variable can be accessed: instance variables, class variables and local variables
instance variables - nonstatic fields of a class
class variables - static fields within a class
local variables - declared withing a method
garbage collection - responsible for removing objects from memory when they can never be used again.
an object becomes eligible for garbage collection when there are no more references to it or its references have gone out of scope


06 Apr 2022
Started review quiz from chapter 1 - completed until Q11.
Review info from chapter 1 to answer questions.

07 Apr 2022
Continued with quiz from chapter 1
Recap and review answers

11 Apr 2022
Reviewed finished for chapter 1 quiz -- answers verified
Started reading chapter 2 - Operators and statements
understanding java operators and working with binary arithmetic operators

12 Apr 2022
continue reading chapter 2 -Operators and statements
 numeric promotion
 working with unary operators: logical complement and negation operators
 increment and decrement operators
 using additional binary operators

 13 Apr 2022
 continue reading chpater 2
 binary operators : assignment operators, compound operators, logical operators and equality operators

14 Apr 2022
continue reading chapter 2
understanding java statements : if -then statement
ex: if (hourOfDay < 11)  System.out.println("Good Morning");
if -then -else statement
ex: if (hourOfDay < 11) {
System.out.println("Good Morning");
} else {
System.out.println("Good Afternoon");
}

